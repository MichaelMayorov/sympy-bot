#! /usr/bin/env python

import json
from urllib2 import urlopen
import sys
from optparse import OptionParser
from tempfile import mkdtemp

def main():
    parser = OptionParser(usage="""\
[options] [commands]

Commands:

  review NNN            Reviews the pull request NNN
  list                  Lists all open pull requests""")
    parser.add_option("--upload",
            action="store_true", dest="upload",
            default=False, help="Uploads the results into the pull request")
    options, args = parser.parse_args()
    if len(args) == 1:
        arg, = args
        if arg == "list":
            list_pull_requests()
            return
        print "Unknown command"
        sys.exit(1)
    elif len(args) == 2:
        arg1, arg2 = args
        if arg1 == "review":
            review(int(arg2), upload=options.upload)
            return
        print "Unknown command"
        sys.exit(1)
    elif len(args) == 0:
        pass
    else:
        print "Too many arguments"
        sys.exit(1)
    parser.print_help()

def github_get_pull_request_all():
    """
    Returns all github pull requests.
    """
    return json.load(urlopen('http://github.com/api/v2/json/pulls/sympy/sympy'))

def github_get_pull_request(n):
    """
    Returns pull request 'n'.
    """
    url = 'http://github.com/api/v2/json/pulls/sympy/sympy/%d'
    data = json.load(urlopen(url % n))
    return data["pull"]

def list_pull_requests():
    p = github_get_pull_request_all()
    for pull in p['pulls']:
        n = pull['number']
        repo = pull['head']['repository']['url']
        branch = pull['head']['ref']
        print "#%03d: %s %s" % (n, repo, branch)

def review(n, upload=False):
    tmpdir = mkdtemp()
    print "> Working directory: %s" % tmpdir
    pull = github_get_pull_request(n)
    assert pull['number'] == n
    print "> Reviewing pull request #%d" % n
    repo = pull['head']['repository']['url']
    branch = pull['head']['ref']
    user = pull["user"]
    print "> Pull request info:"
    print '>     Author: "%s" <%s>' % (user["name"], user["email"])
    print ">     Repository: %s" % repo
    print ">     Branch: %s" % branch

if __name__ == "__main__":
    main()
